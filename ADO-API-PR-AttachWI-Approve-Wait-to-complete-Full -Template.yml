parameters:
- name: organization
  type: string
- name: project
  type: string
- name: repository
  type: string
- name: personalAccessToken
  type: string
- name: workItemId
  type: string
- name: EmailList
  type: string
- name: Featurebranchname
  type: string
- name: newReleaseBranchName
  type: string

steps:
- task: CreatePullRequest@1
  displayName: 'Create Pull Request - $(Featurebranchname) to $(newReleaseBranchName)'
  inputs:
    repoType: 'Azure DevOps'
    repositorySelector: 'select'
    projectId: '5683602a-ddd2-4916-a2b7-51e9123445e7b' # you can able to select this 
    gitRepositoryId: '18bbfdeb-8b83-4561-88ed-21werfseeb' # you can able to select this
    sourceBranch: ${{ parameters.Featurebranchname }}
    targetBranch: ${{ parameters.newReleaseBranchName }}
    title: 'Merge ${{ parameters.Featurebranchname }} to ${{ parameters.newReleaseBranchName }}'
    passPullRequestIdBackToADO: true
    autoComplete: true
    mergeStrategy: 'squash'
    deleteSourch: true

- task: PowerShell@2
  displayName: "PR-AttachWI-merge-Approve-Wait-to-complete"
  inputs:
    filePath: '$(Build.SourcesDirectory)/DevOps/templates/sql-optimization-api/PR-AttachWI-merge-Approve-Wait-to-complete.ps1'
    arguments: '-organization "$(organization)" -project "$(project)" -repository "$(repository)" -workItemId "$(workItemId)" -personalAccessToken "$(personalAccessToken)" -EmailList "$(EmailList)" -SourceBranch "$(Featurebranchname)" -TargetBranch "$(newReleaseBranchName)" -EmailSubjectFirstPart "sqlJobs" -prId "$(pullRequestId)"'
  enabled: True
  condition: and(succeeded(), eq(variables['RaisePullRequest'], 'Y'))
